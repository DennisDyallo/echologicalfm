# Remember, needs a Personal Access Token (PAT) with repo permissions stored in TARGET_REPO_PAT secret

name: Build and Deploy to dennisdyallo.github.io/apps
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      TARGET_REPO_OWNER: dennisdyallo
      TARGET_REPO_NAME: dennisdyallo.github.io
      TARGET_APP_NAME: echological
      APP_DIR: dennisdyallo.github.io/apps/echological
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build:deploy

      - name: Clone target repository
        run: |
          git clone "https://x-access-token:${{ secrets.TARGET_REPO_PAT }}@github.com/${{ env.TARGET_REPO_OWNER }}/${{ env.TARGET_REPO_NAME }}.git" "${{ env.TARGET_REPO_NAME }}"
          echo "Verifying cloned repository:"
          cd "${{ env.TARGET_REPO_NAME }}"
          git status
          git log --oneline -5
          echo "Repository structure:"
          ls -la

      - name: Prepare target directory
        run: |
          echo "Preparing target directory: ${{ env.APP_DIR }}"
          echo "Removing old files..."
          ls -la "${{ env.APP_DIR }}" || echo "Directory does not exist yet"
          rm -rf "${{ env.APP_DIR }}"
          mkdir -p "${{ env.APP_DIR }}"

      - name: Copy build output
        run: |
          echo "Source files in dist/:"
          ls -la dist/
          echo "Copying files to target directory: ${{ env.APP_DIR }}"
          if [ -n "$(ls -A dist/ 2>/dev/null)" ]; then
            cp -r dist/* "${{ env.APP_DIR }}"
            echo "Files copied to target:"
            ls -la "${{ env.APP_DIR }}"
          else
            echo "ERROR: dist/ is empty or does not exist"
            exit 1
          fi

      - name: Configure git
        run: |
          cd "${{ env.TARGET_REPO_NAME }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Check for changes and commit
        run: |
          cd "${{ env.TARGET_REPO_NAME }}"
          echo "Current directory: $(pwd)"
          
          echo "Checking if target app directory exists:"
          ls -la "apps/${{ env.TARGET_APP_NAME }}/" || echo "Directory does not exist!"
          
          echo "Checking directory structure:"
          if [ -d "apps/${{ env.TARGET_APP_NAME }}" ]; then
            find "apps/${{ env.TARGET_APP_NAME }}" -type f | head -10 || echo "No files found!"
          else
            echo "Directory does not exist yet"
          fi
          
          echo "Repository status before adding files:"
          git status --porcelain
          
          git add "apps/${{ env.TARGET_APP_NAME }}"
          
          echo "Repository status after git add:"
          git status --porcelain
          
          # Show what files are staged
          echo "Files to be committed:"
          git diff --staged --name-only
          
          # Check if there are any changes
          if git diff --staged --quiet; then
            echo "No changes detected in the staged files."
            echo "Full git status:"
            git status
            echo "Let's check what's actually in the apps directory:"
            ls -la apps/ || echo "apps directory doesn't exist"
          else
            echo "Changes detected, committing..."
            git commit -m "Deploy from ${{ github.repository }}: ${{ github.sha }}"
            git push
            echo "Successfully deployed!"
          fi